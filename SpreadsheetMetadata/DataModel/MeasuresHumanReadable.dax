/********************************************************************** 
       DAX measures
***********************************************************************/



//--------------------------------------------------------------------
//     Count of QuarterInCalendar   (DateTable)
//-------------------------------------------------------------------- 

Count of QuarterInCalendar:=COUNTA('DateTable'[QuarterInCalendar])


//--------------------------------------------------------------------
//     BS   (Measures_BS)
//-------------------------------------------------------------------- 

BS:=SWITCH(
    TRUE(),
    NOT(HASONEVALUE(DateTable[EndOfMonth])), BLANK(), 
    NOT(HASONEVALUE(Example_ChartOfAccounts[Account Category 2])), BLANK(),
    [TimePeriodForBS] <> "As at month end", BLANK(),
    [BSCalculationSource] = "TB", [BS_From_TB_Raw],
    BLANK()
)


//--------------------------------------------------------------------
//     TimePeriodForBS   (Measures_BS)
//-------------------------------------------------------------------- 

TimePeriodForBS:=SWITCH(
      //  Cant just rely on HASONEVALUE, otherwise for example MTD numbers are geneterated when both YTD and QTD are selected
    TRUE(),
    HASONEVALUE(TimePeriods[Time Period]), VALUES(TimePeriods[Time Period]),
    NOT(ISFILTERED(TimePeriods[Time Period])), "As at month end",
    BLANK()
    )


//--------------------------------------------------------------------
//     BS_From_TB_Raw   (Measures_BS)
//-------------------------------------------------------------------- 

BS_From_TB_Raw:=VAR _TotalPandL_YTD=
    SUMX(
        ALL(Example_ChartOfAccounts), 
        IF([Account Category 1] = "Profit and loss", [TB raw], 0)
    )

VAR _BS_AccountingSign = 
    SUMX(
        Example_ChartOfAccounts,
        SWITCH(
            TRUE,
            Example_ChartOfAccounts[Account Category 1] <> "Balance Sheet", BLANK(),
            Example_ChartOfAccounts [Account Code] = "3120", [TB raw] + _TotalPandL_YTD, 
            [TB raw]
            )
    )

VAR _ReturnValue = SWITCH(
    TRUE,
    NOT(HASONEVALUE(Example_ChartOfAccounts[Account Category 3])), _BS_AccountingSign,
    VALUES(Example_ChartOfAccounts[Account Category 3]) IN {"Liabilities", "Equity"},   -_BS_AccountingSign, 
   _BS_AccountingSign
)


RETURN
   _ReturnValue


//--------------------------------------------------------------------
//     BSCalculationSource   (Measures_BS)
//-------------------------------------------------------------------- 

BSCalculationSource:=SWITCH(
    TRUE,
    HASONEVALUE(CalculationSource[CalcSource]), VALUES(CalculationSource[CalcSource]),
    ISFILTERED(CalculationSource[CalcSource]), BLANK(),
    "TB"
)


//--------------------------------------------------------------------
//     EXAMPLE Check items in data table not in lookup table   (Measures_ErrorChecks)
//-------------------------------------------------------------------- 

EXAMPLE Check items in data table not in lookup table:=VAR _MissingItems = 
    EXCEPT(VALUES(Example_DataTable[Foreign Key]), VALUES(Example_LookupTable[Primary Key]))
    
VAR _ReturnValue = 
    IF(
        ISBLANK(COUNTROWS(_MissingItems)),
        1,
        0
      )
      
RETURN
    _ReturnValue


//--------------------------------------------------------------------
//     EXAMPLE Check list items in data table not in lookup table   (Measures_ErrorChecks)
//-------------------------------------------------------------------- 

EXAMPLE Check list items in data table not in lookup table:=VAR _MissingItems = 
    EXCEPT(VALUES(Example_DataTable[Foreign Key]), VALUES(Example_LookupTable[Primary Key]))

VAR _ReturnValue = 
    CONCATENATEX(_MissingItems, Example_DataTable[Foreign Key], "|")
    
RETURN
    _ReturnValue


//--------------------------------------------------------------------
//     Journals   (Measures_Journals)
//-------------------------------------------------------------------- 

Journals:=VAR _MTD = CALCULATE(
    [Jnls Raw],
    DATESMTD(DateTable[Date]))

VAR _QTD =  CALCULATE(
    [Jnls Raw],
    DATESQTD(DateTable[Date]))

VAR _YTD = CALCULATE(
    [Jnls Raw],
    DATESYTD(DateTable[Date]))

VAR _PY = CALCULATE(
    [Jnls Raw],
    PREVIOUSYEAR(DateTable[Date]))
    
VAR _Total = [Jnls Raw]
        
VAR _ReturnValue = SWITCH(
   TRUE, 
   [TimePeriodForJournals] = "MTD" && [ContextContainsOneMonthEnd], _MTD,
   [TimePeriodForJournals] = "QTD" && [ContextContainsOneQuarterEnd], _QTD, 
   [TimePeriodForJournals] = "YTD" && ([ContextContainsOneYearEnd] || [SelectedPeriodContainsMaxAllSelectedDatesInCurrentYear]),  _YTD,
   [TimePeriodForJournals] = "PY" && ([ContextContainsOneYearEnd] || [SelectedPeriodContainsMaxAllSelectedDatesInCurrentYear]), _PY,
   [TimePeriodForJournals] = "Total", _Total, 
   BLANK()
)
  
RETURN
    _ReturnValue


//--------------------------------------------------------------------
//     TimePeriodForJournals   (Measures_Journals)
//-------------------------------------------------------------------- 

TimePeriodForJournals:=SWITCH(
    TRUE(),
    HASONEVALUE(TimePeriods[Time Period]), Values(TimePeriods[Time Period]),
    NOT(ISFILTERED(TimePeriods[Time Period])), "Total",
    BLANK()
)


//--------------------------------------------------------------------
//     Jnls raw   (Measures_Journals)
//-------------------------------------------------------------------- 

Jnls raw:=SUM(Example_Jnls[Jnl Amount])


//--------------------------------------------------------------------
//     P&L (From TB)   (Measures_PandL)
//-------------------------------------------------------------------- 

P&L (From TB):=VAR _TbExistsForMonth = 
    NOT(ISEMPTY(VALUES(Example_TB[EndOfMonth])))

VAR _LastDateInContext = 
    MAX(DateTable[Date])

VAR _PandL_YTD =  CALCULATE(
    [P&L (From TB) raw],
    DateTable[Date] = _LastDateInContext)

VAR _LastDatePriorQuarter = LASTDATE(PREVIOUSQUARTER(DateTable[Date]))

VAR _PandL_YTD_PriorQtrEnd =   CALCULATE(
        [P&L (From TB) raw],
        DateTable[Date] = _LastDatePriorQuarter)

VAR _PandL_QTD =IF(
   MONTH(_LastDateInContext) <=3, 
   _PandL_YTD,
   _PandL_YTD - _PandL_YTD_PriorQtrEnd)

VAR _LastDatePriorMonth = LASTDATE(PREVIOUSMONTH(DateTable[Date]))

VAR _PandL_YTD_PriorMonthEnd = CALCULATE(
    [P&L (From TB) raw],    
    DateTable[Date] = _LastDatePriorMonth)    

VAR _PandL_MTD  = IF(
    MONTH(_LastDateInContext) = 1, 
    _PandL_YTD,
    _PandL_YTD - _PandL_YTD_PriorMonthEnd)

VAR _LastDatePY = LASTDATE(PREVIOUSYEAR(DateTable[Date]))

VAR _PandL_PY =  CALCULATE(
    [P&L (From TB) raw],
    DateTable[Date] = _LastDatePY) 

VAR _OkToDisplayPandL_MTD =_TbExistsForMonth && 
    [NoGapsInDateRange] && 
    [ContextContainsOneMonthEnd]
    
VAR _OkToDisplayPandL_QTD = _TbExistsForMonth && 
     [NoGapsInDateRange] && 
     [ContextContainsOneQuarterEnd]
        
VAR _OkToDisplayPandL_YTD =  _TbExistsForMonth &&  
     [NoGapsInDateRange] &&
     ([ContextContainsOneYearEnd] || [SelectedPeriodContainsMaxAllSelectedDatesInCurrentYear])

VAR _OkToDisplayPandL_PY = _OkToDisplayPandL_YTD
        
RETURN
    SWITCH(
        TRUE(),
        [TimePeriodForPandL] = "YTD" && _OkToDisplayPandL_YTD,  _PandL_YTD,
        [TimePeriodForPandL] = "QTD" && _OkToDisplayPandL_QTD, _PandL_QTD,
        [TimePeriodForPandL] = "MTD" && _OkToDisplayPandL_MTD, _PandL_MTD,
        [TimePeriodForPandL] = "PY" && _OkToDisplayPandL_PY, _PandL_PY
        )


//--------------------------------------------------------------------
//     P&L (From Jnls)   (Measures_PandL)
//-------------------------------------------------------------------- 

P&L (From Jnls):=VAR _PandL_YTD =  CALCULATE(
        [P&L (From Jnls) raw],
        DATESYTD(DateTable[Date]))

VAR _PandL_QTD =  CALCULATE(
        [P&L (From Jnls) raw],
        DATESQTD(DateTable[Date]))

VAR _PandL_MTD = CALCULATE(
        [P&L (From Jnls) raw],
        DATESMTD(DateTable[Date]))

VAR _PandL_PY = CALCULATE(
        [P&L (From Jnls) raw],
        PREVIOUSYEAR(DateTable[Date]))

VAR _OkToDisplayPandL_MTD = [NoGapsInDateRange] && [ContextContainsOneMonthEnd]

VAR _OkToDisplayPandL_QTD = [NoGapsInDateRange] && [ContextContainsOneQuarterEnd]
        
VAR _OkToDisplayPandL_YTD =  [NoGapsInDateRange] &&
     ([ContextContainsOneYearEnd] || [SelectedPeriodContainsMaxAllSelectedDatesInCurrentYear])

VAR _OkToDisplayPandL_PY = _OkToDisplayPandL_YTD
        
RETURN
    SWITCH(
        TRUE(),
        [TimePeriodForPandL] = "MTD" && _OkToDisplayPandL_MTD, _PandL_MTD,
        [TimePeriodForPandL] = "QTD" && _OkToDisplayPandL_QTD, _PandL_QTD,
        [TimePeriodForPandL] = "YTD" && _OkToDisplayPandL_YTD,  _PandL_YTD,
        [TimePeriodForPandL] = "PY" && _OkToDisplayPandL_PY, _PandL_PY
        )


//--------------------------------------------------------------------
//     P&L (From Jnls) raw   (Measures_PandL)
//-------------------------------------------------------------------- 

P&L (From Jnls) raw:=CALCULATE(
        -[Jnls Raw],
        KEEPFILTERS(Example_ChartOfAccounts[Account Category 1]  = "Profit and loss")
)


//--------------------------------------------------------------------
//     P&L (From TB) raw   (Measures_PandL)
//-------------------------------------------------------------------- 

P&L (From TB) raw:=CALCULATE(
        -[TB raw],
        KEEPFILTERS(Example_ChartOfAccounts[Account Category 1]  = "Profit and loss")
)


//--------------------------------------------------------------------
//     P&L   (Measures_PandL)
//-------------------------------------------------------------------- 

P&L:=SWITCH(
    [P&LCalculationSource], 
    "TB", [P&L (From TB)], 
    "Journals", [P&L (From Jnls)]
)


//--------------------------------------------------------------------
//     TimePeriodForPandL   (Measures_PandL)
//-------------------------------------------------------------------- 

TimePeriodForPandL:=SWITCH(
      //  Cant just rely on HASONEVALUE, otherwise for example MTD numbers are geneterated when both YTD and QTD are selected
    TRUE(),
    HASONEVALUE(TimePeriods[Time Period]), VALUES(TimePeriods[Time Period]),
    NOT(ISFILTERED(TimePeriods[Time Period])), "MTD",
    BLANK()
    )


//--------------------------------------------------------------------
//     P&LCalculationSource   (Measures_PandL)
//-------------------------------------------------------------------- 

P&LCalculationSource:=SWITCH(
    TRUE,
    HASONEVALUE(CalculationSource[CalcSource]), VALUES(CalculationSource[CalcSource]),
    ISFILTERED(CalculationSource[CalcSource]), BLANK(),
    "TB"
)


//--------------------------------------------------------------------
//     NumberScaleAdj   (Measures_Sundry)
//-------------------------------------------------------------------- 

NumberScaleAdj:=IF(
    HASONEVALUE(NumberScale[ShowValuesAs]),
    VALUES(NumberScale[DivideBy]),
    1)


//--------------------------------------------------------------------
//     IsSingleWholeMonth   (Measures_TimeCalcs)
//-------------------------------------------------------------------- 

IsSingleWholeMonth:=HASONEVALUE(DateTable[EndOfMonth]) && [ContextIncludesWholeMonthsOnly]


//--------------------------------------------------------------------
//     ContextIncludesWholeYearsOnly   (Measures_TimeCalcs)
//-------------------------------------------------------------------- 

ContextIncludesWholeYearsOnly:=VAR _StartOfFirstYear = 
    DATE(YEAR(MIN(DateTable[Date])), 1, 1)
    
VAR _EndOfLastYear = 
    DATE(YEAR(MAX(DateTable[Date])), 12, 31)

VAR _ReturnValue = 
   COUNTROWS(DateTable) = (_EndOfLastYear - _StartOfFirstYear +1)
      
RETURN 
    _ReturnValue


//--------------------------------------------------------------------
//     ContextContainsOneYearEnd   (Measures_TimeCalcs)
//-------------------------------------------------------------------- 

ContextContainsOneYearEnd:=CALCULATE(
    COUNTROWS(DateTable),
    KEEPFILTERS(DateTable[IsEndOfYear])
) = 1


//--------------------------------------------------------------------
//     ContextContainsOneQuarterEnd   (Measures_TimeCalcs)
//-------------------------------------------------------------------- 

ContextContainsOneQuarterEnd:=CALCULATE(
    COUNTROWS(DateTable),
    KEEPFILTERS(DateTable[IsEndOfQtr])
) = 1


//--------------------------------------------------------------------
//     ContextContainsOneMonthEnd   (Measures_TimeCalcs)
//-------------------------------------------------------------------- 

ContextContainsOneMonthEnd:=CALCULATE(
    COUNTROWS(DateTable),
    KEEPFILTERS(DateTable[IsEndOfMonth])
) = 1


//--------------------------------------------------------------------
//     ContextIncludesWholeQuartersOnly   (Measures_TimeCalcs)
//-------------------------------------------------------------------- 

ContextIncludesWholeQuartersOnly:=VAR _StartOfFirstQtr = 
    STARTOFQUARTER(DateTable[Date])
    
VAR _EndOfLastQtr = 
    ENDOFQUARTER(DateTable[Date])

VAR _ReturnValue = 
   COUNTROWS(DateTable) = (_EndOfLastQtr - _StartOfFirstQtr +1)
      
RETURN 
    _ReturnValue


//--------------------------------------------------------------------
//     ContextIncludesWholeMonthsOnly   (Measures_TimeCalcs)
//-------------------------------------------------------------------- 

ContextIncludesWholeMonthsOnly:=VAR _StartOfFirstMonth = 
    EOMONTH(MIN(DateTable[Date]), -1) + 1
    
VAR _EndOfLastMonthEnd = 
    EOMONTH(MAX(DateTable[Date]), 0)

VAR _ReturnValue = 
   COUNTROWS(DateTable) = (_EndOfLastMonthEnd - _StartOfFirstMonth +1)
      
RETURN 
    _ReturnValue


//--------------------------------------------------------------------
//     SelectedPeriodContainsMaxAllSelectedDatesInCurrentYear   (Measures_TimeCalcs)
//-------------------------------------------------------------------- 

SelectedPeriodContainsMaxAllSelectedDatesInCurrentYear:=Var _MinDateInContext = MIN(DateTable[Date])

VAR _MaxDateInContext = MAX(DateTable[Date])

VAR _ReturnValue = ([MaxAllSelectedDatesInCurrentYear] >= _MinDateInContext) && 
   ([MaxAllSelectedDatesInCurrentYear] <= _MaxDateInContext)
   
RETURN
   _ReturnValue


//--------------------------------------------------------------------
//     NoGapsInDateRange   (Measures_TimeCalcs)
//-------------------------------------------------------------------- 

NoGapsInDateRange:=VAR _FirstDate = MIN(DateTable[Date])
    
VAR _LastDate = MAX(DateTable[Date])

VAR _ReturnValue = COUNTROWS(DateTable) = (_LastDate - _FirstDate + 1)

RETURN
   _ReturnValue


//--------------------------------------------------------------------
//     IsMaxWholeMonthInCurrentYear   (Measures_TimeCalcs)
//-------------------------------------------------------------------- 

IsMaxWholeMonthInCurrentYear:=SWITCH(
    TRUE(),
    NOT([IsSingleWholeMonth]), FALSE,
    VALUES(DateTable[EndOfMonth]) = [MaxAllSelectedDatesInCurrentYear],
    FALSE()
)


//--------------------------------------------------------------------
//     MaxAllSelectedDatesInCurrentQtr   (Measures_TimeCalcs)
//-------------------------------------------------------------------- 

MaxAllSelectedDatesInCurrentQtr:=VAR _Qtr = 
   VALUES(DateTable[QuarterInCalendar])

RETURN
IF(
    HASONEVALUE(DateTable[QuarterInCalendar]), 
    CALCULATE(
            MAX(DateTable[Date]),
            ALLSELECTED(DateTable),
            DateTable[QuarterInCalendar] = _Qtr
    )
)


//--------------------------------------------------------------------
//     MaxAllSelectedMonthsInCurrentYear   (Measures_TimeCalcs)
//-------------------------------------------------------------------- 

MaxAllSelectedMonthsInCurrentYear:=VAR _Year = 
   VALUES(DateTable[Year])

RETURN
IF(
    HASONEVALUE(DateTable[Year]), 
    CALCULATE(
            MAX(DateTable[EndOfMonth]),
            ALLSELECTED(DateTable),
            DateTable[Year] = _Year
    )
)


//--------------------------------------------------------------------
//     MaxAllSelectedDatesInCurrentYear   (Measures_TimeCalcs)
//-------------------------------------------------------------------- 

MaxAllSelectedDatesInCurrentYear:=VAR _Year = 
   VALUES(DateTable[Year])

RETURN
IF(
    HASONEVALUE(DateTable[Year]), 
    CALCULATE(
            MAX(DateTable[Date]),
            ALLSELECTED(DateTable),
            DateTable[Year] = _Year
    )
)


//--------------------------------------------------------------------
//     IsSingleWholeQtr   (Measures_TimeCalcs)
//-------------------------------------------------------------------- 

IsSingleWholeQtr:=HASONEVALUE(DateTable[EndOfQtr]) && [ContextIncludesWholeQuartersOnly]


//--------------------------------------------------------------------
//     IsSingleWholeYear   (Measures_TimeCalcs)
//-------------------------------------------------------------------- 

IsSingleWholeYear:=HASONEVALUE(DateTable[Year]) && [ContextIncludesWholeYearsOnly]


//--------------------------------------------------------------------
//     MaxAllSelectedDates   (Measures_TimeCalcs)
//-------------------------------------------------------------------- 

MaxAllSelectedDates:=CALCULATE(
        MAX(DateTable[Date]),
        ALLSELECTED(DateTable)
    )


//--------------------------------------------------------------------
//     TB raw   (Measures_TrialBalance)
//-------------------------------------------------------------------- 

TB raw:=SUM(Example_TB[Amount])


//--------------------------------------------------------------------
//     TB   (Measures_TrialBalance)
//-------------------------------------------------------------------- 

TB:=IF(
    [TimePeriodForTb] =  "YTD" && HASONEVALUE(DateTable[EndOfMonth]),
    [TB Raw]
)


//--------------------------------------------------------------------
//     TimePeriodForTb   (Measures_TrialBalance)
//-------------------------------------------------------------------- 

TimePeriodForTb:=IF(
    HASONEVALUE(TimePeriods[Time Period]),
    VALUES(TimePeriods[Time Period]),
    "YTD"
    )